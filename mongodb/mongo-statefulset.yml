apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-tier
  labels:
    app: microservices
spec:
  selector:
    matchLabels:
      tier: mongo
  serviceName: mongodb
  replicas: 1
  minReadySeconds: 10
  template:
    metadata:
      labels:
        tier: mongo
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - image: mongo:latest
        imagePullPolicy: IfNotPresent
        name: mongo
        env:
        - name: MONGO_INITDB_ROOT_USERNAME_FILE 
          value: /etc/mongo-credentials/MONGO_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD_FILE 
          value: /etc/mongo-credentials/MONGO_ROOT_PASSWORD

        ports:
        - containerPort: 27017
          name: mongo
        volumeMounts:
        - name: mongo-persistent-storage
          mountPath: /data/db
        - name: config
          mountPath: /config
        - name: secret-volume
          mountPath: /etc/mongo-credentials
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pv-claim

      - name: config
        configMap:
          name: mongo-config
          items:
          - key: mongo.conf
            path: mongo.conf

      - name: secret-volume
        secret:
          secretName: mongodbsecret